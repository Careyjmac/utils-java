// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/reads.proto

package com.google.genomics.v1;

public interface StreamReadsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.genomics.v1.StreamReadsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string project_id = 1;</code>
   *
   * <pre>
   * The Google Developers Console project ID or number which will be billed
   * for this access.
   * </pre>
   */
  java.lang.String getProjectId();
  /**
   * <code>optional string project_id = 1;</code>
   *
   * <pre>
   * The Google Developers Console project ID or number which will be billed
   * for this access.
   * </pre>
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <code>optional string read_group_set_id = 2;</code>
   *
   * <pre>
   * The ID of the read group set from which to stream reads.
   * </pre>
   */
  java.lang.String getReadGroupSetId();
  /**
   * <code>optional string read_group_set_id = 2;</code>
   *
   * <pre>
   * The ID of the read group set from which to stream reads.
   * </pre>
   */
  com.google.protobuf.ByteString
      getReadGroupSetIdBytes();

  /**
   * <code>optional string reference_name = 3;</code>
   *
   * <pre>
   * The reference sequence name, for example `chr1`,
   * `1`, or `chrX`. If set to *, only unmapped reads are
   * returned.
   * </pre>
   */
  java.lang.String getReferenceName();
  /**
   * <code>optional string reference_name = 3;</code>
   *
   * <pre>
   * The reference sequence name, for example `chr1`,
   * `1`, or `chrX`. If set to *, only unmapped reads are
   * returned.
   * </pre>
   */
  com.google.protobuf.ByteString
      getReferenceNameBytes();

  /**
   * <code>optional int64 start = 4;</code>
   *
   * <pre>
   * The start position of the range on the reference, 0-based inclusive. If
   * specified, `referenceName` must also be specified.
   * </pre>
   */
  long getStart();

  /**
   * <code>optional int64 end = 5;</code>
   *
   * <pre>
   * The end position of the range on the reference, 0-based exclusive. If
   * specified, `referenceName` must also be specified.
   * </pre>
   */
  long getEnd();
}
